WICHAI a Webservices Platform for Tourism Based on New Techniques in Thai-English Transliterated Words SearchingAbstractThis research proposes a new technique in Thai-English transliterated words searching by using the similar-sounding words database with similarity and relatedness calculations. The ”WICHAI” platform was employed as a core of the search engine components. The newly proposed method can help non-native- speaker tourists, who lack of Thai language skills, to find the relevant and accurate key- words on the internet with wider and better flexibility. The calculations uses succesively consonants and vowels comparisons based on the Royal Thai General System of Transcrip- tion (RTGS), iterations with similar charac- ters, and finally, Livenshtein method. Simi- larity calculations with various threshold lev- els were conducted in order to obtain the most appropriate words whereas the level of word- meaning understanding is still maintained.Keywords: Thai Language, Transliteration, Livenshtein Algorithm, Phuket Tourism Plat- form, Ontologies1 IntroductionTourism is an important business section in many countries including Thailand. Thailand is a country with rich natural resources suitable for tourism in all regions. In 2014, Thailand won ”The most populartourist destination in Asia” award conferred by Ger- man travel industry group Go Asia. Facilities for tourists who are not native speakers have become an essence to maintain and enhance this business sec- tion in international level. One of the major obsta- cles for tourists to find information of a desired des- tination on the internet is the language barrier. The universal standard called ”karaoke language” is used for transliterating Thai into the Roman script. More- over, the native language can be used in both formal and informal approaches. Some words, phrases and accents are used only in some specific social situa- tions and regions with their local dialect. Tourists may get some suggestions for unseen destinations from the locals and might not be able to find fur- ther information from the internet. This is due to language barriers and also variation of sound and pronunciation of the native language. For example, locals would say ”Namtok Kathu” to indicate the ”Kathu Waterfall”. Therefore, when tourists search ”Namtok Kathu” (keywords, names and places) in Thai language on the internet, they will not be able to find the required information unless the search en- gine recognizes that ”Namtok Kathu” is related to ”Kathu Waterfall”. This provides the possibility to enhance the current system with the newly proposed algorithm.In the globalization era, most people can connect
to each other via internet anytime and anywhere. Most search engines use keywords query which is identical and relevant to conceptual search (Singth- ongchai and Niwattanakul, 2013). This means that the way the user spells a word affects the search re- sults and thus a spelling mismatch would give inac- curate results. Unfortunately, keywords for touris- tic attractions in Thailand are often expressed in Thai language such as the name of touristic sites, museums, restaurants or plaza. These keywords cannot be translated into English such as “วัด- จันทร์" (“Wat Chan”), which is used by locals to indicate the “Chan” temple. When trans- lated to English, the keyword “Wat Chan” be- comes “Moon Temple” and when a non native user searches the translation he will not have the desired result. Therefore, tourists have to search only in transliterated keywords. Cur- rently, word transliteration from Thai to En- glish has fixed guidelines and rules but, due to the language barrier, these guidelines cannot be used by tourists (non native users). Thereby, tourists may not find suitable and accurate in- formation on touristic attractions on the inter- net without the help of a personal native guide or friends.The new algorithm that we propose in this pa- per enhances the effectiveness of search engines when transliterated words are used. This is done by adding, organizing and classifying words into groups of consonants and vowels. A search en- gine using our new algorithm can match and find correct or nearest and most related words as much as possible even when misspellings (with acceptable basis) are present in the search. The new proposed approach can provide more flex- ibility to find information on search engines. This is a powerful tool which can reduce the search time and provide more flexibility for non- native travelers in Thailand.In the second section of this paper we present the related work on information re- trieval and searching transliterated words with RTGS. Then, in the third section, we intro- duce ”WICHAI”: a platform for Phuket tourism based on ontology and Thai-English transliter- ated words searching methodology. In the fourth section, we show the final results based on the combination of all proposed processes. Finally, we conclude by a discussion and summary.For the rest of the paper we use the abbrevi- ations TH, EN, FR and TW to refer to Thai, English, French and Transliterated Words, re- spectively. We also use the form [W1(L1) → W2(L2)] to say that word W2 is the translation of word W1 from language L1 to language L2.2 Related work2.1 Information RetrievalInformation retrieval is the name of the activ- ity that connects a collection of information re- sources to the users needing it. It is to obtain information resources relevant to specific infor- mation need. The search is based essentially on the definition of keywords. The output is ob- tained by only selecting the information that users need and removing or filtering unrelated words (Baeza-Yates and Ribeiro-Neto, 1999).During the last decade, information retrieval techniques was based on dictionary (thesaurus) searches. As the words are being added all the time, we need enough space to keep the in- formation (Sanderson and Croft, 2012). The next problem is that the Thai language can be written in different formats depending on the linguistic familiarity of the user. Exam- ple, the word “สวัสดี" [TH] means “Hello”[EN] and can be correctly transliterated into “Sawas- dee” [TW]. The problem is that the same pro- nunciation can be obtained using other different
transliterations of the word: “Sawatdee”[TW] , “Sawadee”[TW] and “Sawade”[TW]. The reason is that some combinations of characters can re- flect a similar pronunciation and thus they can replace each other. A good system requires a complete and correct support of consonants and vowels in order to be able to search relevant in- formation efficiently.2.2 Transliteration for Thai LanguageFundamentals of consonants and vowels map- ping between Thai and English are an essential key of this paper. The transcription between languages is very difficult due to the difficulty to do phonetics distinction between vowels and consonants. The transcription is indeed com- posed of two parts: transcription of consonants and transcription of vowels. Basic Thai textual syllables can be represented in the form of initial consonant, a vowel, a final consonant or a tone. In the Thai language, phonetics are based on the exact tone of the voice (5 tone levels and 4 tone marks) (Sangkavichitr, 2012) and their tones have unique significantly different (Kertkeidka- chorn et al., 2014). This mapping rule has, how- ever, many limitations due to the absence of the necessary tone marks to distinguish words and meanings in Thai. Most of transcription prob- lems come from character-sound mapping ambi- guity, functional consonants, character ordering and implicit vowels (Thangthai et al. (2006)).The mapping of consonants and vowels used in this research is based on two resources. The first is The Royal Thai General System of Tran- scription (RTGS, 1999). The second is the simi- lar table. RTGS is the official system for render- ing Thai words in the Latin alphabet. This sys- tem is published by the Royal institute of Thai- land which is authorized to issue official guide- lines for Thai transcriptions of foreign words andalso Romanization of Thai words. The purpose of RTGS is to enable a user to read and write Thai words using the Roman alphabets that are the closest to the original Thai ones (Romanized Character Part : Figures 1 and 2).The official rule to convert transliterated words uses the principle of romanization by transcription method as (called romanized char- acters) proposed by the Royal Institute. Ro- manization of Thai words is based on sound transcription. Both consonants and vowels must be spelled and sorted grammatically correctly. Otherwise, the search engine may not find the required information. In addition, some words in Thai are the same in English such as the word [computer(EN) → “คอมพิวเตอร์” (TH)]. But when transliterated, the word “computer” in Thai becomes “computoe”[TW]. Therefore, when a user searches for the transliterated form of this word, search engines will most likely find the closest English words that most users know and not the transliterated one. In this case, the transliterated word will not be available for searching.The sound of English alphabets can be com- pared to Thai alphabets such as the sound of the letter “K” is represented by one of the let- ters “ก” , “ข” or “ค” (Chai and Aus- dang, 2010). In addition, letters from the same alphabetical group in English can give differ- ent words and meanings in Thai. An exam- ple of this case is the letters “K” and “G”: When the letter “G” is replaced by “K” in the classical thai meal “Tom Kah Gai”[TW], we end up with the transliterated word “Tom Kah Kai”[TW] where “Gai”[TW] means chicken while “Kai”[TW] means egg. Due to the above reasons, Thai-English translation is considered very complex and less flexible for searching.This work reuses the results of a research pa-
 per written in Thai by Tasanawan Soonklang, Somchai Prasitjutrakul and Boonserm Kijsirikul in 2000. Then we apply to it phonetics mapping of consonants and vowels between Thai and En- glish. We created the similar table which orga- nizes the groups of similar consonants and vow- els together. Moreover, the number of similar characters is increased in order to gain more comprehensibility as shown in Figures 1 and 2. The similar table (consonants and vowels) is compatible with users with no knowledge of linguistics. This table is not officially used as an alternative standard. However, it will be useful in reducing search limitations in practice.Figure 1: Vowel Mapping(sound)Prayut and Somboon (1998) presented an algorithm for Thai-English cross-language transliterated word retrieval. The retrieval is done by using phonetic codes retrieval based on a modified soundex coding. The soundex system is fast and usually matches names that it shouldFigure 2: Consonant Mapping (sound)find, but often causes errors such as incorrectly matched names that do not have actually sim- ilar sounds. Tasanawan Soonklang and Ki- jsirikul (2000) proposed Thai-English transliter- ated word encoding for cross-language retrieval system using back propagation neural network. This encoding uses the network output to ob- tain a list of phonetic codes of a word. The ex- perimental results using K-fold cross validation technique.Lin et al. (2010) presented the Japanese- Chinese retrieval system based on the PageRank algorithm. It applied query transliteration with Sanseido Japanese-Chinese bilingual dictionary and translated query terms with wikipedia.Jhamtani et al. (2014) presented code switch- ing between English and Hindi. They use frequently characters substituted for standard characters in transliterated forms. Modified edit distance algorithm is calculated for results. 
 3 Contribution3.1 WICHAI PlatformWICHAI (WebservICes platform for pHuket tourism bAsed on ontologIes) is a platform for searching touristic attractions, activities and destinations in Phuket (Thailand) based on three ontologies as shown in Figure 3.It is useful for visitors to be able to search in- formation easily and correctly. This platform is composed of a website, search engine and ontolo- gies. The website is a key component for users to access the main functions. It provides various services such as register or login to establish a connection to the user profile ontology, search by keywords, GPS, etc. The website of the plat- form connects to the search engine. The search engine represents the main linguistic processingpart of the platform. It consists of three compo- nents: EnglishWords Searching, Transliterated- Words Searching and PossibleWords Searching using interoperability between Romanized and similar table. The search engine is the part that guarantees a high efficiency for searching when using the platform. The last part is the ontolo- gies, it is composed of three ontologies which are PhuketTourism, Language and UserProfile. The first ontology, PhuketTourism, represents the various information available in Phuket such as attractions, activities, events etc. Next, the Language ontology is the collecting of relevant words, synonyms and data types to be applied with the algorithm to create the list of similar words. Finally, the UserProfile ontology stores the details of users such as the favorite sport, the travel time, etc. It is used as initial data forFigure 3: WICHAI Platform
search mapping.3.2 MethodologyThai alphabets consists of 44 consonants (classi- fied in 14 groups of sound) and 44 vowels-sound (classified in 21 groups). Each syllable in the Thai alphabet must contain both vowels and consonants. For a consonant, the translitera- tion differs depending on its location in the syl- lable. Thai consonants can be initial consonants or final consonants. The initial consonants are required in all syllables. An initial consonant might be pronounced differently when used as a final consonant. For example, the word “ดาด” [TH] can be transliterated as “DAT”[TW]. We notice that the consonant “ด” is pronounced as “D” when it is an initial consonant while it is pronounced as “T” when it is a final consonant.Consonants in Thai cannot be pronounced without vowels. Each vowel begins with either a, e, i, o or u. Vowels in Thai are very compli- cated. They are divided into vowel sounds and diphthongs. RTGS defined the Romanized char- acters for consonant and vowel sounds in Thai. But it is very difficult for non-native speakers. Therefore, the similar table is applied on a set of characters that have similar pronunciation. Adding additional similar characters to a group makes it more easy and flexible to use.The algorithm consists of three principal steps (Figure 4): Processing of transliterated words, Levenshtein distance and Levenshtein similarity.The user input goes first through the Ro- manized Processing step which is used to ex- tract relevant characters in the RTGS table. If the word is correct (a match is found) then the algorithm stops. Otherwise, the Roman- ized+Possiblewords Processing is used to ex- tracts words from the RTGS table and the sim- ilar table. The output of this step is a listof possible words if the entered word was cor- rect. The list of possible words contains the matched words between the two tables. In con- trary, if the Romanized+Possiblewords Process- ing fails, the output contains a list of wrong words that will be passed next to the Leven- shtein distance and Levenshtein similarity cal- culation step. These calculations use the Lev- enshtein algorithm. This is very useful when we have errors resulting from wrong keyboard input as they are often of the same kind as the allowed edit operations (Gupta and Mathur, 2012).The Levenshtein distance (Edit Distance) is a string metric for measuring the difference be- tween two sequences (p and q). It calculates the least number of edit operations that are nec- essary to modify one string to the other (Lev- enshtein(p,q)). Informally, the Levenshtein dis- tance between two words is the minimum num- ber of single-character edits (i.e. change a letter (substitutions), insert a letter (insertions) and delete a letter (deletions)) required to change one word into the other (Haldar and Mukhopad- hyay, 2011). For example, the “NMTOL” can be transformed into “NAMTOK” by adding the letter “A” after the letter “N” and substituting the letter “L” at the end of the word by the letter “K”.LevSim(p, q) = 1 −LevDis(p, q) (1) max(length|p|, length|q|) On the other hand, the Levenshtein Similarity function calculates the similarity index of its two arguments based on the edit distance (Equation (1)): “0” means that the strings are entirely dif- ferent while “1” means that they are identical.44.1Experiment and DiscussionData and ExperimentThe data set used in our research is a list of Thai words that covers the 14 groups of consonants
 Figure 4: Overview of the transliterated words searchingand the 21 groups of vowels. There are differ- ent patterns with a total of 108 words or 141 syllables. The experiments were conducted on a group of 15 PhD students from the FEMTO- ST Institute, University of France-Comte, Be- sancon, France. They all come from different nationalities but do not have any knowledge of Thai linguistic. The words we use in our data set consist of initial consonants, vowels and final consonants (optional). In our experiments we compare on the basis of syllables and not only the whole word. This helps us to understand with which consonants or vowels a foreign user has the most problems. This process requires an in-depth analysis of alphabets. Experiments that were conducted on the 15 PhD students re- sulted in 2091 syllables to analyze: 141 (initial data set syllables) * 15 (number of students un- dergoing the experiments) - 24 (missing data or incomplete words) = 2091 syllables.As shown in Table 1, the Romanized process-ing step extracted only 524 syllables which rep- resents 25.06% of the data set (2091 syllables). The combination between the Romanized and the Possiblewords processing can give more cor- rect output by extracting 846 syllables which represents 40.46% of the data set.Table 1: Results comparison all steps.We performed an in-depth analysis of result- ing syllables separating them into initial conso- nants, vowels and final consonants, as shown inTable 2.The analysis of the data set showed that2091 syllables contain an initial consonant and a vowel while only 874 syllables contain a final consonant. From table 2, and for the initial con- 
 Table 2: Results from Romanized and Possiblewords processing in consonants and vowelssonants, we notice that the Romanized process- ing can extract 1298 related syllables (62.08%) while the Possiblewords processing step can ex- tract 482 related syllables (23.05%). This can help us to obtain a high performance because it is easier to find similar pronunciation of conso- nants than vowels in English. For example, to search for the word “การ” [TH] that is transliter- ated as “KAN”[TW], users can write several dif- ferent possible words such as “GAN”, “KHAN” or “CAN”.For vowels, results showed that there is a high percentage of incorrect results (42.52% of the dataset). This is because some vowels are very complex such as “เ-ือย” [TH] which is translit- erated as “UEAI”[TW], “เ-ียว” [TH] which is transliterated as “IAO”[TW]. In some vowel groups, switching a character can change the vowel to another group. For example, the vowel “เ-” [TH] that is transliterated as “E”[TW], the vowel “แ-” [TH] that is transliterated as “-AE”[TW] and the vowel “ัว” [TH] that is transliterated as “EA”[TW]. This leads to a con- fusion when the search retrieves the transliter- ated words. Another reason is that some English words are pronounced the same as Thai words. The result is that a user that is familiar with English will probably search for the English pro- nunciation of these words instead of searching for their transliterated versions. An example of such words is the word “เฮลิคอปเตอร์” [TH]: Thevowel “เ-อ” [TH] is transliterated as “OE”[TW] and thus “HELIKHOPTOE”[TW] is the cor- rect transliteration but most users will search for “HELICOPTER”[EN] instead.For final consonants, there are 2 groups that are mostly used: group 6 (r-n-l) and group 12 (t-d-th-dh) (table 2). For example, the words “SANIT”, “SANID”, “SANITH” or “SANIDH”.To summarize, table 1 shows that the sys- tem can correctly retrieve 846 syllables of the data set while it is unable to retrieve 1245 one. This is because the Thai language is very com- plicated both in consonants and vowels. It is very difficult for users who do not speak Thai to find correctly, precisely and completely the required information using only the Romanized and Possible words processing. Therefore, we calculate the similarity between syllables which cannot be extracted in the Romanized and Pos- sible words processing using the Levenshtein al- gorithm. This enables us to calculate the num- ber of mutations and Levenshtein similarity to find the searched words at different similarity level as shown in Figure 5.Figure 5: Calculating similarity for searchingFigure 5 shows that the similarity calcula- tion can filter and extract similar words from wrong words (1245 words). Similarity calcula- tion with a threshold of 0.6 revealed interesting 
results. This threshold is consistent with the re- sults proposed by Heuser et al. (2007): Authors presented the quality of similarity calculations. Using a similarity threshold of 0.6 we can suc- cessfully separate relevant and irrelevant words.Figure 5 shows that the similarity calculation using the threshold of 0.8 shows no significant results compared to those using the threshold of 1.0 (correct words). It can extract only more 148 syllables. In contrast, the similarity calcula- tion with a threshold of 0.6 revealed interesting results. With this threshold, the engine could search with higher efficiency and find more 937 syllables.Results show that the similarity threshold of 0.6 is an acceptable value for Thai-English transliterated words search. Each syllable length is 3-4 characters and each word consists of 1-2 syllables. So, each word has 3-8 characters. The similarity calculation with a threshold of 0.6 makes some errors only in 1-3 words depending on the length of the characters. The result is excellent for users who lack of Thai language skills but they can still search with Thai words (transliterated words) using an Latin keyboard.Table 1 shows that using Romanized process- ing, possible words processing and similarity cal- culation with a threshold of 0.6 gives the most efficient results 85.27% (1783 datasets of 2091).4.2 DiscussionExperiments in this research were conducted on PhD students that do not speak the Thai Lan- guage. They come from different countries but they all speak the English language. Most of the errors that were found are similar between char- acters: they cannot divide each alphabet and vowel clearly. The analysis of these two lan- guages can be divided into two parts: conso- nants and vowels.Consonants:1. Thai alphabets are composed of two char- acters such as “KH”, “CH”, “TH” and “PH”. The letter “H” is often omitted in the results giving, for example, “Kram” or “Kam” instead of “Khram”[TW].2. Some final letters “ป” and “บ” in Thai have similar pronunciation. So, “P” and “B” is often replaced. For example, theword “บาป” [TH] , which is transliterated as “Bap”[TW] , is often written as “Bab”.3. ”ง” in Thai is transliterated to “NG”. This letter is difficult to be transliterated be- cause it does not have the same pronuncia- tion in EnglishVowels:51.2.Some transliterated words are familiar words in English. For example, the word “มากมาย” [TH] is transliterated as “Mak- mai”[TW] but, instead, we often find the words “Makmine” or “Makmy” in the re- sults.The vowelstransliterated into “E” and “AE” respec- tively. But most of results are “AE” which are incorrect. For example, the word [ “ทะ- เล” (TH) → “Sea”(EN)] should be translit- erated as “Tale”[TW] except that it was transliterated as “Talae” in most of the re- sults.Conclusion and Future Work“เ-“ and“แ-“ in Thai areIn this paper, we proposed word searching algo- rithm based on the “WICHAI” platform. Thai- English transliterated words searching using the
similarity table can improve the search effi- ciency. This algorithm uses both the RTGS ta- ble and the similar table in order to extract the possible words and match the user requirement. Similarity calculations with the Levenshtein al- gorithm was applied. The newly proposed algo- rithm showed that similarity calculations using the threshold of 0.6 is the best value because it gives the maximum matching for relevant words. This work is useful for tourists in Thailand who do not speak Thai. Using our platform, they can search all the words they hear from locals easily using an Latin keyboard anytime and anywhere. They can obtain information with more flexibil- ity by using this newly proposed algorithm to overcome the language barrier and enjoy their stay in Thailand.For the future work, we plan to conduct our experiments on two populations of people who speak the English language (native and non na- tive speakers), in order to be able to compare the performance of information retrieval, and add more character in the same group. In addition, we will calculate the similarity using other al- gorithms such as the Jaccard’s coefficient and Dice’s coefficient. This will enable us to find the best similarity calculation algorithm to use for Thai-English transliterated words searching.ReferencesRicardo Baeza-Yates and Berthier Ribeiro-Neto. 1999. Modern information retrieval. Addison Wesley/ACM Press.Wutiwiwatchai Chai and Thangthai Ausdang. 2010. Syllable-based thai-english machine translitera- tion. In Proc. of the 2010 Named Entities Work- shop, News ’10, pages 66–70, Stroudsburg, PA, USA. Assoc. for Computational Linguistics.Neha Gupta and Pratistha Mathur. 2012. Spell checking techniques in nlp : A survey. Dec.Rishin Haldar and Debajyoti Mukhopadhyay. 2011. Levenshtein distance technique in dictionary lookup methods: An improved approach. CoRR, abs/1101.1232.Carlos A Heuser, Francisco NA Krieser, and Vi- viane Moreira Orengo. 2007. Simeval: a tool for evaluating the quality of similarity functions. In Proc. of the 26th intern. conf. on Conceptual mod- eling - Vol. 83, pages 71–76. Australian Comp. Soc. Inc.Harsh Jhamtani, Suleep Kumar Bhogi, and Vaskar Raychoudhury. 2014. Word-level language iden- tification in bi-lingual code-switched texts. In Proc. of the 28th Pacific Asia Conference on Lan- guage, Information, and Computation, pages 348– 357, Phuket,Thailand, Dec.Natthawut Kertkeidkachorn, Proadpran Pun- yabukkana, and Atiwong Suchato. 2014. Using tone information in thai spelling speech recogni- tion. In Proc. of the 28th Pacific Asia Conference on Language, Information, and Computation, pages 178–184, Phuket,Thailand, Dec.Chu-Cheng Lin, Yu-Chun Wang, and Richard Tzong-Han Tsai. 2010. Japanese-chinese information retrieval with and iterative weightin g scheme. J. Inf. Sci. Eng., 26(2):685–697.Suwanvisat Prayut and Prasitjutrakul Somboon. 1998. Thai-english cross-language transliterated word retrieval using soundex technique. In Proc. of the National Comp. Sc. and Engineering Conf., Bangkok, Thailand.RTGS. 1999. The royal thai general system of tran- scription. In The Royal Institute of Thailand, http://www.royin.go.th.Mark Sanderson and Bruce Croft. 2012. The his- tory of information retrieval research. Proceedings of the IEEE, 100(Special Centennial Issue):1444– 1451, May.Chalermsub Sangkavichitr. 2012. A design of thai-english transliterated word retrieval for smart phones. In Int. Conf. on Systems and Electronic Engineering, pages 34–38.Jatsada Singthongchai and Suphakit Niwattanakul. 2013. A method for measuring keywords similarity by applying jaccard’s, n-gram and vector space. Lecture Notes on Information Theory Vol.1(4), Dec.Somchai Prasitjutrakul Tasanawan Soonklang and Boonserm Kijsirikul. 2000. Thai-english translit- erated word encoding cross-language retrieval us- ing neural networks. In National Comp. Sc. and Engineering Conf.Ausdang Thangthai, Chatchawarn Hansakunbunthe- ung, Rungkarn Siricharoenchai, and Chai Wutiwi- watchai. 2006. Automatic syllable-pattern induc- tion in statistical thai text-to-phone transcription. In Interspeech 2006 - ICSLP, PA, USA, 2006.