1AbstractJapanese is prescriptively said to be verb-final, but it exhibits postposing in colloquial register, where an element is placed after a verb. Based on narrative data, we show that the syntactic type of postposed element is quite diverse and that, contrary to the prevalent, opposing view, Japanese postposing is not restricted to a matrix clause. These issues are addressed in Dynamic Syntax, with the outcome of developing some formal aspects of the framework.Introduction1We provide narrative data to set out an empirical ground of a grammatical study of postposing:o It seems postposing may occur at an embedded level, contrary to the prevalent, opposing view.o A wider variety of syntactic element may be postposed than has been held in the literature.These syntactic flexibilities pose a challenge for grammar modelling, and we propose a solution in Dynamic Syntax (DS) (Cann et al. 2005). DS has been employed for postposing in several languages (Section 4); still, no analysis has been developed for Japanese presumably because it allows a wider range of items to be postposed. The application to Japanese advances formal aspects of the theory and broadens empirical coverage.2 Narrative DataSeveral works have extracted postposing data from spontaneous resources (Nomura 2008), but they tend to avoid the syntactic facets of postposing. In this section, we shed light on grammatical aspects of the phenomenon based on narrative data.Firstly, since Kuno (1978), it has been held that Japanese postposing is restricted to a matrix level (“root-phenomenon”). Whitman (2000: 465) offers data suggesting otherwise. Our narrative data like (2) may also suggest that Japanese postposing is not a root-phenomenon, although it is possible that (2) is a case of indirect speech.A Dynamic Syntax Modelling of Postposing in Japanese NarrativesTohru SerakuDept. of Japanese Interpretation and Translation Hankuk University of Foreign StudiesJapanese is prescriptively verb-final as in (1)a, but elements may be placed after a verb in colloquial register. In (1)b, sushi-o appears after tabe ‘eat.’(1) a.Ken-ga sushi-o tabe-ta-yoK-NOM sushi-ACC eat-PAST-FP ‘Ken ate sushi.’b. Ken-ga Δ K-NOMtabe-ta-yo, sushi-o eat-PAST-FP sushi-ACCseraku@hufs.ac.kr  The postposed item sushi-o is underlined in (1)b, and the gap is notated as Δ without any theoretical implications. Finally, yo is a final particle (FP) that appears in colloquial register.Japanese postposing has been explored in formal syntax (Takano 2014, Takita 2014) as well as in dialogue/discourse studies (Nomura 2008, Ono 2006). Except for Fujii (1995: 169), grammatical properties of Japanese postposing have not been examined based on naturally-occurring materials.1 This work was supported by Hankuk University of Foreign Studies Research Fund of 2015.(2) [yappari Δ [as.expectedwakatten-na kono-hito]-toknow-FP this-person]-COMP watashi-wa omouI-TOP think‘I think this person knows the thing.’(adapted from {kirishima, p.74}) 
The postposed element kono-hito ‘this person’ is a subject of the embedded verb wakaru ‘know’ (< wakatten). Together with Whitman’s (2000) data, it is then assumed that Japanese postposing is not a root-phenomenon.Second, a range of syntactic elements may be at a postposed position. Fujii (1995: 169) reports that in spontaneous speech, a postposed element may be: NPs (2), PPs (3), AdvPs (4), connectives (5), and noun-modifiers (see (9)-(11) below).In (8), the adverb yorinimoyotte ‘of all things,’ the PP ore-kara ‘from me,’ and the PP Nozomi-ni ‘to Nozomi’ are postposed.As for the postposing of a noun-modifier, Kuno (1978) notes that it is a unique feature of Japanese postposing. In (9)-(10), the relative clause and the genitive are postposed, respectively (adapted from Kuno (1978: 75)). In our data (11), the coordinated adjectives are postposed.(9) nanika Δ daikenkyuu-o nasatta- something great.resarch- ACC do.POL- nodesu-ka [gaikoku-de nasarete-nai] POL- Q [foreign.country-in done-NEG] ‘Have you done any great research which has not been conducted in foreign countries?’(10) kimi Δ-imouto-to kekkon-shitekurenaikayou(3) mainichi-noyouni Δ everyday-like yonjukkai-de 40th.floor-atoaishitemasu-yomeet.POL-FP  ‘We meet almost everyday at the 40th floor.’ {mikeneko, p.119}(4) tsumasaki-ga Δ itai sukoshi-dake toe-NOM ach little-only‘My toe is aching a little.’ {kirishima, p.55}(5) Δ ‘kekkoudesu’ jya-nai-ndatte dakara ‘ok’ COP-NEG-FP as.I.said‘As I said, it’s not ‘ok’.’ {roll, p.71}To this Fujii’s list we add: the Adv clause (6) and the complement clause (7).(6) Δ daijyoubu-desu [hitori-jya-nai]-kara all.right-COP [alone-COP-NEG]-because‘It’s all right as I’m not alone.’ {roll, p.101}sister-with marriage-do.please ‘Can you please marry my sister?’(11) Δ futari-no-himitsu-ga fueta two.person-GEN-secret-NOM increasedsasayakana demo kanbinatiny but sweet‘We’ve had another tiny but sweet secret of us.’ (adapted from {Tokyo, p.69})The issue of noun-modifiers, though it is a unique property of Japanese postposing, has been largely neglected except for a few works (Takano 2014).2In sum, Japanese postposing is flexible in that it is not restricted to a root clause and that it allows a wide array of syntactic items to be postposed.3 Dynamic Syntax (DS)DS models knowledge of language as a reflection of language use (Cann et al. 2005, Kempson et al. 2001), with the two fundamental assumptions:o Structure building proceeds as a string is parsed word-by-word.32 Takano (2014: 150) claims that, when there are multiple postposed items, a noun-modifier cannot co-occur with the other types of syntactic element. This generalisation, however, is challenged by a spontaneous example of Fujii (1995: 171).3 See Purver et al. (2014) for the DS modelling of production. boku-no I-GEN   (7) tomodachi-kara Δ friend-fromkii-ta-monhear-PAST-FPMei-to-Satsuki-wa mou kono-yo-niM-and-S-TOP already this-world-ininai-nda-toabsent-FP-COMP‘I heard Mei and Satsuki were not in this world any longer.’ (adapted from {kirishima, p.100})Our narrative data also confirm the existence of “multiple postposing” (Abe 1999).(8) Δ Δ Δ fuman-toka aru-wake-nee-daro complaint-like exist-reason-NEG-FPyorinimoyotte ore-kara Nozomi-niof.all.things I-from N-to‘Of all things, it’s never the case that I have a complaint for Nozomi.’ {yuunou, p.172}      
o A DS structure is semantic; a string is mapped onto a semantic tree without any separate level of syntactic representation.3.1 The Basic FormalismThe DS structure is semantic, represented in a tree- format. For instance, (12) is mapped onto (13).(12) Ken-ga hashi-tta K-NOM run-PAST‘Ken ran.’(13) Parsing the string (12) (ignoring tense)Fo(hashi'(Ken')), Ty(t), ♢Fo(Ken'), Ty(e) Fo(hashi'), Ty(e→t)Each non-terminal node is binary-branched, with the left daughter being an argument node and the right daughter being a functor node. Each node is decorated with various types of statement.o Fo(X): Fo is a “formula” predicate that takes a content X as argument. Fo(Ken') declares that the content denoted at this node is Ken'.o Ty(X): Ty is a “type” predicate that takes a type X as argument. Ty(e) declares that the content denoted at this node is of type e.The top node in (13) is also annotated with ♢ , a pointer. This highlights a node under development. More decorations on a node are illustrated if wesee a “partial” tree. For instance, if Ken-ga alone is parsed in (12), the corresponding tree is (14).(14) Parsing Ken-ga in (12) ?Ty(t), ♢Fo(Ken'), Ty(e)The parse of Ken-ga creates a subject node. (The term “subject” is used for presentation purposes.) ? is used to form a requirement. For instance, ?T(t) in (14) requires that Ty(t) will hold at this node.Let us turn to the structure-building process. The initial state of DS tree-update is (15).(15) AXIOM (= the initial state) ?Ty(t), ♢The initial state is progressively updated by two types of action: “general” and “lexical” actions.General actions are not lexically triggered and are optional (as long as an execution condition holds). LOCAL *ADJUNCTION posits a structurally-unfixed node. In the left-hand tree of (16), the unfixed node (shown by a dashed line) may be a subject node, an object node, etc., at a later stage.(16) LOCAL *ADJUNCTION ?Ty(t)?Ty(e), ♢⇒Parsing Ken ?Ty(t)  Lexical actions are those encoded in each lexical item. Ken encodes the action to decorate a ?Ty(e)- node with Fo(Ken') and Ty(e), as in the right-hand tree (16). The nominative case marker ga encodes the action to resolve an unfixed node as a subject node, as in (14). (A solid line visually shows that a structural uncertainty has been fixed.) As another example of lexical action, the parse of hashi ‘run’ provides a predicate node with the Fo-statement involving the content hashi' and the Ty-statement involving the type e→t.(17) Parsing Ken-ga hashi-tta (ignoring tense) ?Ty(t)Fo(Ken'), Ty(e) Fo(hashi'), Ty(e→t), ♢What remains to be done in (17) is to conduct functional application and type deduction. This is formulated as the general action of ELIMINATION, which engenders the final state (13).The tree (13) is “well-formed” in the sense that requirements like ?Ty(t) are not in place any more. A string is “grammatical” iff there exists a parse- route that leads to a well-formed tree.3.2 The LINK MachineryThe formalism is enriched with LINK, a formal pairing of two distinct trees. Consider (18).(18) [[Ken-ga tabe-ta] sushi]-ga oishii [[K-NOM eat-PAST] sushi]-NOM tasty ‘Sushi which Ken ate is tasty.’The parse of the relative clause Ken-ga tabe-ta projects a propositional structure where an objectFo(Ken'), Ty(e), ♢     
node is decorated with a variable x (representing a gap). This propositional tree is associated with an emergent tree by being LINKed to a ?Ty(e)-node. (A LINK relation is expressed as a curved arrow.)postposed element is then parsed at this LINKed ?Ty(e)-node. But this LINK-strategy cannot be applied to the postposed item sushi-o in (20) as the parse of a case marker at a LINKed node aborts a tree-update. (The case marker -o may be dropped (Tanaka & Kizu 2007), in which case the LINK- strategy is available (Seraku & Ohtani fthc.).)A ?Ty(e)-node can also be introduced by LOCAL *ADJUNCTION (Section 3.1). This action, however, cannot be run here because it is allowed to be run only if a root node is decorated with ?Ty(t) (Cann et al. 2005). This restriction is indeed essential for ensuring verb-finality of non-colloquial register of Japanese. On the other hand, postposing is attested colloquially. In order to solve this ambivalence, we propose to extend the formalism with (22).(22) Proposal: LOCAL *ADJUNCTION is subject to the ?Ty(t)-restriction in usual register. But this restriction is relaxed in colloquial register.The intuitive idea behind is that some grammatical rules are “not observed” in casual register, though it may be prescriptively regarded as the “wrong use of language.”Once LOCAL *ADJUNCTION is allowed to fire at a Ty(t)-node, it may induce an unfixed ?Ty(e)-node for the postposed item sushi.(23) Parsing Ken-ga tabe-ta-yo, sushi Fo(tabe'(x)(Ken')), Ty(t)(19) Parsing Ken-ga tabe-ta Fo(tabe'(x)(Ken')), Ty(t)?Ty(e), ♢  The current node is decorated by the parse of the head noun sushi in (18). This node will be part of the propositional structure for the matrix clause.4 The DS AccountThe DS framework is used to model postposing in several languages: English (Cann et al. 2004), Greek (Chatzikyriakidis 2011, Gregoromichelaki 2013), and Mandarin (Wu 2005). These studies are primarily concerned with NP postposing, but our data confirm that a wider range of syntactic items may be postposed in Japanese. In this section, we propose a DS account of Japanese postposing by advancing formal aspects of the framework. For brevity, the analysis is based on artificial examples which preserve the essence of the narrative data.4.1 The BaselineLet us start with the basic example (20), where the postposed item is the NP sushi-o.(20) Ken-ga Δ tabe-ta-yo, sushi-o K-NOM eat-PAST-FP sushi-ACC ‘Ken ate sushi.’The parse of the preceding clause Ken-ga tabe-ta- yo gives rise to (21). (The gap is notated with x.)(21) Parsing Ken-ga tabe-ta-yo Fo(tabe'(x)(Ken')), Ty(t), ♢Fo(Ken'), Ty(e) Fo(tabe'(x)), Ty(e→t)Fo(x), Ty(e) Fo(tabe'), Ty(e→(e→t))To parse the postposed element sushi-o, a ?Ty(e)- node must be present. In the previous DS studies on postposing (Cann et al. 2004, Chatzikyriakidis 2011, Gregoromichelaki 2013, Wu 2005), a LINK relation is launched to introduce a ?Ty(e)-node. AFo(sushi'), Ty(e), ♢ Fo(Ken'), Ty(e)Fo(tabe'(x)), Ty(e→t)     Fo(x), Ty(e) Fo(tabe'), Ty(e→(e→t))The unfixed node is resolved as an object node by the parse of the accusative case marker o. Since the two nodes collapse, the node description is updated, with the variable being saturated as sushi'. After ELIMINATION is run, the final state (24) emerges.(24) ELIMINATION (twice) Fo(tabe'(sushi')(Ken')), Ty(t), ♢Fo(Ken'), Ty(e) Fo(tabe'(sushi')), Ty(e→t)Fo(sushi'), Ty(e) Fo(tabe'), Ty(e→(e→t))    
The above analysis readily solves our first set of the data on the syntactic flexibility of postposing. That is, postposing may take place at an embedded level. With the proposal (22), the general action of LOCAL *ADJUNCTION can be run at any Ty(t)-node of any subordinate structure.Another advantage of the analysis is that it deals with multiple postposing straightforwardly.(25) Δ Δ tabe-ta-yo, Ken-ga sushi-o eat-PAST-FP K-NOM sushi-ACC‘Ken ate sushi.’In DS, only a single unfixed node can be present at a time due to the tree logic (Cann et al. 2005). This constraint is met in our account. In (25), an unfixed node is introduced for Ken, but it is immediately resolved as a subject node by the parse of the nominative case marker ga as in (26).(26) Parsing tabe-ta-yo, Ken-ga Fo(tabe'(y)(x)), Ty(t)Fo(Ken'), Ty(e), ♢ Fo(tabe'(y)), Ty(e→t)Fo(y), Ty(e) Fo(tabe'), Ty(e→(e→t))As no unfixed node remains in the tree, the parser can safely posit an unfixed node, this time for the second postposed item sushi. In this tree-update, there is only a single unfixed node at a time. Thus, the parse of the multiple postposed items is licit. It also follows from the analysis that the order of the postposed items may be swapped:(27) Δ Δ tabe-ta-yo, sushi-o Ken-ga(28) Two LINK relations (schematic display) Fo(tabe'(y)(x)), Ty(t) Fo(Ken'), Ty(e)Fo(sushi'), Ty(e), ♢This tree appears to have two LINKed nodes, but these nodes collapse. The collapsed single node is decorated with distinct statements: Fo(Ken') and Fo(sushi'). This leads to inconsistency. By contrast, our underspecification-based strategy is extendable to multiple postposing straightforwardly.4.2 Noun-ModifiersThis section explicates how a noun-modifier can be postposed in Japanese (but not other languages). To this end, two formal ingredients are introduced.First, in addition to the Fo and Ty predicates, we introduce the Tn predicate (Cann et al. 2005):o Tn(X): Tn is a “tree-node” predicate that takes a numeral X assigned to the node as argument.Each node in a tree is assigned a unique numerical value to designate a node position. The root node is assigned “0.” If a mother is assigned “α,” the left- daughter “α 0” and the right-daughter “α 1.” This numerical value is taken as an argument for Tn.        (29) Illustration of Tn-statements Tn(0) Tn(00)Ty(010)Tn(01)Tn(011)   eat-PAST-FP ‘Ken ate sushi.’sushi-ACC K-NOMSecond, there is a variant of the general action LOCAL *ADJUNCTION (LA), called GENERALISED ADJUNCTION (GA). Whilst LA induces an unfixed node that must be resolved in a local structure, GA induces an unfixed node which could be resolved anywhere (Cann et al. 2005). This globally unfixed node is visually shown by a dotted line in (30).(30) GENERALISED ADJUNCTION ?Ty(t)?Ty(t), ♢In (30), an unfixed node is decorated with ?Ty(t), but the action can introduce a ?Ty(e)-node as well.In the tree-update for (27), too, there is a single unfixed node at a time: the unfixed node for the first postposed item sushi has been resolved by the parse of the accusative marker o before an unfixed node is posited for the second item Ken.It is not clear whether a LINK-based strategy in the past DS works deals with multiple postposing. This is because multiple LINK relations launched from the same node collapse and inconsistency of descriptions occurs. For instance, consider (28).         
Further, we propose, as with (22), that GA can fire at a Ty(t)-node in colloquial register.Based on these additional mechanisms, we shall examine (i) the relative clause, (ii) the adjective, and (iii) the genitive in turn.Relative Clause. Consider example (31).(31) Ken-ga Δ sushi-o tabe-ta-yo, K-NOM sushi-ACC eat-PAST-FP [Mari-ga tsuku-tta][M-NOM make-PAST]‘Ken ate sushi which Mari made.’After the preceding clause is parsed, GENERALISED ADJUNCTION introduces a globally unfixed ?Ty(t)- node, where the relative clause is parsed.(32) Parsing the string (31) Fo(tabe'(sushi')(Ken')), Ty(t), Tn(0)Fo(tsuku'(x)(Mari')), Ty(t), ♢The parser runs the general action of introducing aLINK relation for relatives (Cann et al. 2005). (33) Launching a LINK relationFo(tabe'(sushi')(Ken')), Ty(t), Tn(0)Fo(tsuku'(x)(Mari')), Ty(t) ?Ty(e), Tn(U), ♢U in Tn(U) is a metavariable, a place-holder which is in need of saturation. If the parser identifies the address of the LINKed node with that of the node for sushi, Tn(U) is then updated into Tn(010). (This is the “tree-node identification” in Seraku (2013).) Ty-statements are omitted for brevity in (34).(34) Tree-node identification Fo(tabe'(sushi')(Ken')), Tn(0) ♢Fo(Ken'), Tn(00) Fo(tabe'(sushi')), Tn(01)Fo(α), Tn(010) Fo(tabe'), Tn(011) Fo(tsuku'(x)(Mari'))Here, α is a term denoting sushi which Mari made. (Formally, α is represented in the epsilon calculus.) Due to the node-identification process, the node for the relative clause has now been resolved as a node which is LINKed to the Tn(010)-node.In the analysis above, the relative clause modifies sushi. It is also formally allowed to modify Ken but this modification is blocked on semantic grounds. (This remark applies to the analysis of adjectives and genitives to be presented below.)Adjective. Consider example (35).(35) Ken-ga Δ sushi-o tabe-ta-yo, oishii K-NOM sushi-ACC eat-PAST-FP tasty ‘Ken ate tasty sushi.’A DS account of adjectives is underway (Cann et al. 2005). Setting aside non-predicative adjectives, we assume that the “predicative” adjective oishii ‘tasty’ constitutes a relative clause. Then, the tree- update is essentially the same as that detailed for the relative clause example in (32)-(34).Genitive. In DS, genitives have not been seriously investigated either. Consider (36).(36) Ken-ga Δ-sushi-o tabe-ta-yo, Mari-no K-NOM sushi-ACC eat-PAST-FP M-GEN ‘Ken ate Mari’s sushi.’The parse of the preceding clause gives rise to a propositional tree. GENERALISED ADJUNCTION is run to introduce an unfixed ?Ty(e)-node for Mari.(37) Parsing Ken-ga sushi-o tabe-ta-yo, Mari Fo(tabe'(sushi')(Ken')), Ty(t), Tn(0)Fo(Mari'), Ty(e), ♢Here, we propose that the genitive no encodes theaction to launch a LINK relation, as in (38).4 (38) Proposal: Parsing the genitive noFo(α), Ty(e) Fo(UR(α, U)), Ty(e), Tn(V), ♢Two remarks are in order. First, the LINKed node is inhibited by a metavariable U. This is because no may stand alone, as in (39). In such cases, U is4 See Seraku (2013) for the DS analysis of other kinds of no.                                        
contextually saturated. If no is followed by a noun, U is updated into the content of the noun.(39) Mari-no M-GEN‘Mari’s’Second, R(α, U) is a “presupposition” for U, and it declares that α is in relation R to U. This is also important as the relation described by the genitive no is vastly context-dependent (Nishiyama 2003), as in (40). R is saturated as a salient relation.(40) Mari-no-hon M-GEN-book‘Mari’s book’ (= ‘a book which Mari bought,’ ‘a book which Mari loves,’ etc.)With the proposal (38), the genitive no is parsed at the tree (37), which outputs (41). (R is simply taken as POS(session) in the present context.)(41) Parsing Ken-ga sushi-o tabe-ta-yo, Mari-no Fo(tabe'(sushi')(Ken')), Ty(t), Tn(0)Fo(Mari'), Ty(e)Fo(UPOS(Mari', U)), Ty(e), Tn(V), ♢The parser then identifies the current node with the node for sushi by saturating V in Tn(V) as 010. This process also saturates U in Fo(U) as sushi'.(42) Tree-node identification Fo(tabe'(sushi')(Ken')), Tn(0)Fo(Ken'), Tn(00) Fo(tabe'(sushi')), Tn(01)In this case, every time no is parsed, it induces a LINK relation. The LINKed node posited by the final no is identified with the node for sushi.Secondly, due to the use of a metavariable in a Fo-statement, (44) is predicted to be ambiguous.(44) musuko-ga ka-tta-yo, Ken-no son-NOM buy-PAST-FP K-GEN(i) e.g., ‘Ken’s son bought something.’ (ii) e.g., ‘My son bought Ken’s book.’If the LINKed node introduced by no is identified with the node for musuko ‘son,’ U in Fo(U) at the LINKed node is saturated as musuko', which yields the reading (i). If the LINKed node is identified with the internal-argument node for ka ‘buy,’ U in Fo(U) is pragmatically saturated as a content that denotes a contextually-salient entity such as a book. This gives rise to the reading (ii).So far, the DS modelling of the postposing of a noun-modifier has been articulated. The heart of the analysis is GENERALISED ADJUNCTION. In DS, this action was formulated for Japanese relatives (Cann et al. 2005: Ch.6). It is speculated that the availability of this action is a necessary (if not a sufficient) condition on the postposing of a noun- modifier. This accounts for why such postposing is impossible in, say, English where we assume that the action is unavailable. It needs to be worked out what other conditions may be, so that the account is extendable to other languages.4.3 Other Syntactic ElementsOur account applies to the other syntactic elements (though the analysis of connectives requires some stipulation), as briefly mentioned below.PP/AdvP. PPs and AdvPs are adjuncts (excluding PPs in ditransitive verbs). In DS, Marten (2002) hypothesises that these adjuncts are of type e. We could apply Marten’s analysis to the PP data (45).             Fo(sushi'POS(Mari', sushi')), Tn(010), ♢ Fo(Mari'), Ty(e)Fo(tabe'), Tn(011) (45) Ken-ga Δ hashi-tta-yo kouen-de Our account makes further predictions. Firstly, a K-NOM run-PAST-FP park-in genitive phrase may be multiplied, as in (43).(43) Ken-ga Δ-sushi-o tabe-ta-yo,K-NOM sushi-ACC eat-PAST-FP Mari-no-tomodachi-no-kareshi-no M-GEN-friend-GEN-boyfriend-GEN‘Ken ate Mari’s friend’s boyfriend’s sushi.’‘Ken ran in a park.’After the parse of the preceding clause engenders a propositional tree, LOCAL *ADJUNCTION creates an unfixed ?Ty(e)-node. This node is decorated by the parse of kouen ‘park’ and resolved by the parse of the postposition de ‘in.’ 
The same analysis extends to AdvP. In this case, we need to assume that an adverb itself encodes the action to resolve an unfixed node because an AdvP does not involve a postposition.Marten’s analysis, however, blurs the distinction between arguments and adjuncts. If one would like to maintain the distinction, we could make use of Davidson’s (1967) analysis of adjuncts by utilising a situation term (Gregoromichelaki 2006).Adv Clause. For an Adv clause, a LINK relation starts from a Ty(t)-node to a ?Ty(t)-node, as in (47) for the example (46). The postposed Adv clause will then be parsed at the LINKed ?Ty(t)-node.(Kuno 1978: 74). An unfixed node introduced by *ADJUNCTION can be fixed at any embedding level (but not across a LINK relation). In the case of the long-distance postposing of an NP, the parser first executes *ADJUNCTION to introduce a non-locally unfixed ?Ty(t)-node and LOCAL *ADJUNCTION to introduce a locally unfixed ?Ty(e)-node under the unfixed ?Ty(t)-node. See Seraku (2013) for details of the successive applications of these actions.Yet, there is a problem. Since general actions are optional, GENERALISED ADJUNCTION can be used to parse a postposed complement clause. This is problematic because an unfixed node introduced by this action can be fixed anywhere (even across a LINK relation, DS equivalence of an “island”). We then tentatively stipulate that the complementiser to encodes the action to abort a tree-update if the unfixed node is hung from a Ty(t)-node.Connective. Discourse connectives are generally taken to contribute to a non-truth-conditional level of meaning, one theoretical conception of which is “higher explicature,” a dimension of meaning that represents a speech-act, a propositional attitude, etc. (Blakemore 2002). For example, (49) remains the same truth-conditionally when dakara is taken out. Rather, dakara encode some non-truth-conditional content roughly glossed as ‘as I said.’(49) Δ ‘kekkoudesu’ jya-nai-ndatte dakara ‘ok’ COP-NEG-FP as.I.said‘As I said, it’s not ‘ok’.’ {roll, p.71}Purver et al. (2010) represent this “higher-level” meaning on top of the usual DS tree. We assume that dakara encodes the action to place a content decoration relating to a propositional attitude at the “higher-level” representation.5 ConclusionThis article has provided narrative data, revealing the syntactic flexibilities of Japanese postposing. The postposing of a noun-modifier especially sets a challenge for grammar analysis. We have offered a DS solution with the consequence of advancing the formalism and broadening empirical coverage.AcknowledgmentsI thank Akira Ohtani and the anonymous PACLIC reviewers for their helpful comments on the earlier versions of the present article.(46) Δ Ken-ga waratta-yo K-NOM smiled-FP[Mari-ga kita]-toki [M-NOM came]-when ‘When Mari came, Ken smiled.’(47) Launching a LINK relation Fo(wara'(Ken')), Ty(t)?Ty(t), ♢Comp Clause. A complement clause is of type t, and cannot be modelled by LOCAL *ADJUNCTION, which creates a ?Ty(e)-node. DS defines a variant of this action: *ADJUNCTION, which introduces a ?Ty(t)-node. Cann et al. (2005) assume that this action cannot fire at a Ty(t)-node; we stipulate that in colloquial register, this restriction is relaxed (cf., (22)). A complement clause is processed under the unfixed ?Ty(t)-node, and this node is resolved by the parse of a complementiser.For instance, the underlined part in (48) is parsed at a ?Ty(t)-node introduced by *ADJUNCTION. The node is resolved as the object node in the main tree by the parse of the complementiser to.(48) tomodachi-kara Δ kii-ta-mon friend-from hear-PAST-FP Mei-to-Satsuki-wa mou kono-yo-ni    M-and-S-TOPinai-nda-toalready this-world-in absent-FP-COMP‘I heard Mei and Satsuki were not in this world any longer.’ (adapted from {kirishima, p.100})A bonus of this analysis is that it explains why postposing exhibits a “long-distance dependency”
ReferencesAbe, J. 1999. On directionality of movement. Ms., Nagoya University.Blakemore, D. 2002. Relevance and Linguistic Meaning. Cambridge University Press, Cambridge.Cann, R., Kempson, R., and Marten, L. 2005. The Dynamics of Language. Elsevier, Oxford.Cann, R., Kempson, R., Marten, L., Otsuka, M., and Swinburne, D. 2004. On the left and on the right. In Adger, D. et al. (eds.) Peripheries, pp. 19-47. Kluwer, Dordrecht.Chatzikyriakidis, S. 2011. Right dislocations in Greek. Ms., CNRS.Davidson, D. 1967. The logical form of action sentences. In Rescher, N. (ed.) The Logic of Decision and Action, pp. 81-95. University of Pittsburg Press, Pittsburg.Fujii, Y. 1995. Nihongo-no-gojyun-no gyakuten-nitsuite. (On the reversed word orders in Japanese) In Takami, K. (ed.) Nichieigo-no Uhou Teni Koubun, pp. 167-98. Hituzi Publishing, Tokyo.Gregoromichelaki, E. 2006. Conditionals in Dynamic Syntax. PhD thesis, King’s College London.Gregoromichelaki, E. 2013. A dynamic perspective on left-right asymmetries. In Webelhuth, G. et al. (eds.) Rightward Movement in a Comparative Perspective, pp. 321-68. John Benjamins, Amsterdam.Kempson, R., Meyer-Viol, W., and Gabbay, D. 2001. Dynamic Syntax. Blackwell, Oxford.Kuno, S. 1978. Danwa-no Bunpou. (Grammar of Discourse) Taishukan, Tokyo.Marten, L. 2002. At the Syntax-Pragmatics Interface. Oxford University Press, Oxford.Nishiyama, Y. 2003. Nihongo Meishiku-no Imiron-to- Goyouron. (The Semantics and Pragmatics of Noun Phrases in Japanese) Hituzi Publishing, Tokyo.Nomura, J. 2008. Japanese Postposing. PhD thesis, University of Hawaii.Ono, T. 2006. Postpredicate-elements in Japanese conversation. In Vance, T. & Jones, K. (eds.) Japanese/Korean Linguistics 14, pp. 381-91. Stanford: CSLI Publications.Purver, M., Gregoromichelaki, E., Meyer-Viol, W., and Cann, R. 2010. Splitting the ‘I’s and crossing the ‘you’s. In Łupkowski, P. & Purver, M. (eds.) Aspects of Semantics and Pragmatics of Dialogue, pp. 43-50. Polish Society for Cognitive Science, PoznańPurver, M., Hough, J., and Gregoromichelaki, E. 2014. Dialogue and compound contributions. In Stent, A. & Bangalore, S. (eds.) Natural Language Generation in Interactive Systems, pp. 63-92. Cambridge University Press, Cambridge.Seraku, T. 2013. Clefts, Relatives, and Language Dynamics. DPhil thesis, University of Oxford.Seraku, T. & Ohtani, A. fthc. The wh-licensing in Japanese right dislocations. Paper to be presented at Colloque de Syntaxe et Sémantique à Paris 2015. Université Paris Diderot, FranceTakano, Y. 2014. A comparative approach to Japanese postposing. In Saito, M. (ed.) Japanese Syntax in Comparative Perspective, pp. 139-80. Oxford University Press, Oxford.Takita, K. 2014. Pseudo-right dislocation, the bare-topic construction, and hanging topic constructions. Lingua 140: 137-57.Tanaka, H. & Kizu, M. 2007. Island insensitive constructions in Japanese. York Papers in Linguistics 2: 219-34.Whitman, J. 2000. Right dislocation in English and Japanese. In Takami, K. et al. (eds.) Syntactic and Functional Explorations in Honor of Susumu Kuno, pp. 445-70. Kuroshio Publishers, Tokyo.Wu, Y. 2005. The Dynamic Syntax of Left and Right Dislocation. PhD thesis, University of Edinburgh.Appendix: Citation Information{kirishima} [ISBN: 978-4-08-74681705] Asai, Ryo. Kirishima Bukatsu Yamerutteyo Tokyo: Shueisha Publishing. (2012){mikeneko} [ISBN: 978-4-334-76865-2] Akagawa, Jiro. Mikeneko Homuzu-no Yumekikou Tokyo: Kobunsha. (2015){roll} [ISBN: 978-4-04-389804-6]Arikawa, Hiro. ‘Roll Out’ in Kujira-no Kare. Tokyo: Kadokawa Shoten Publishing. (2010){tokyo} [ISBN: 4-10-133921-X] Ekuni, Kaori. Tokyo TowerTokyo: Shinchosha Publishing. (2006){yunou} [ISBN: 978-4-04-389804-6]Arikawa, Hiro. ‘Yunouna Kanojo’ in Kujira-no Kare. Tokyo: Kadokawa Shoten Publishing. (2010)