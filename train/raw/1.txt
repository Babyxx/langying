ABSTRACTIn this paper we proposed new model for digital library which is an extension for the 5S Model to include the semantic web layer in the structure of digital library to be 6S model for digital library. We also discuss the important role of semantic web in digital library and how are semantic web technologies affect the information retrieval accuracy. We represent the semantic layer in 6S Model by adding ontology to a digital library that satisfies the 5S model and enhance ontology by updating it automatically. This ontology is used in books classification and retrieval according to concepts in ontology.Keywords: semantic web; digital library; ontology; Hierarchical classification; Naive Bayes classifier1. INTRODUCTIONDigital Libraries (DLs) are systems specifically designed to assist users in information seeking activities. As a result, libraries face new challenges, competitors, demands, and expectations [1]. Libraries are redesigning services and information products to add value to their services and to satisfy the changing information needs of the user community. Traditional libraries are still handling largely printed materials that are expensive and bulky. Information seekers are no longer satisfied with only printed materials. They want to supplement the printed information with more dynamic electronic resources [2]. In Section 2 there is brief description about semantic web. In section 3 there is brief definition about 5S Model of digital library. In section 4 we introduce the 6S proposed model for digital library. Section 5 is the ontology implementation and update ontology method. Section 6 is case study of applying algorithm to update ontology in digital library and Finally Section 7 is the Conclusion with future work.2. SEMANTIC WEBSemantic Web is a technology which adds well-defined documents on the Web for computers as well as people to understand the meaning of thedocuments more easily, and to automate the works such as information searches, interpretation, and integration. The ontologies, which are an essential component of the semantic Web, define the common words and concepts used to describe and represent an area of knowledge [3].A semantic information search based on the ontology can provide the inferred and associated information between data [3]. The use of ontologies in the context of digital libraries could be interesting in order to incorporate new functionalities by describing the relationships between elements. The concept of ontology introduced by the Semantic Web is a promising path to extend digital library formalisms with meaningful annotations [4].The Semantic Web Stack, also known as Semantic Web Cake or Semantic Web Layer Cake, illustrates the architecture of the Semantic Web.Figure 1: Semantic web stackEach layer exploits and uses capabilities of the layers below. It shows how technologies that are standardized for Semantic Web are organized to make the Semantic Web possible [5].6S: Adding a Semantic Model To 5S Framework 1
3. 5S FORMAL MODEL FOR DIGITAL LIBRARY5S provides a formal framework to capture the complexities of DLs. The definitions in [6] unambiguously specify many key characteristics and behaviors of DLs. This also enables automatic mapping from 5S constructs to actual implementations as well as the study of qualitative properties of these constructs (e.g., completeness, consistency). In this section, we summarize the 5S theory from [6]. Here we take a minimalist approach, i.e., we describe briefly, according to our analysis, the minimum set of concepts required for a system to be considered a digital library [7].4- Scenario is a sequence of events that also can have a number of parameters. Events represent changes in computational states; parameters represent specific variables defining a state and their respective values. Scenarios detail the behavior of DL services.5- Society is “a set of entities and the relationships between them” and can include both human users of a system as well as automatic software entities which have a certain role in system operation. These 5Ss, along with fundamental set theoretic definitions, are used to define other DL constructs such as digital objects, metadata specification, collection, repository, and services [7].4. 6S Proposed Model for Digital Library Streams, Structures, Spaces, Scenarios, Societies and SemanticDue to the important role of semantic web technologies in enhancing the digital library functionalities we propose new model which is an extension of the 5S formal model of digital library to include semantic web technologies.Ontology can describe the different concepts of digital library entities and the relationship between those entities. Ontology enhances the digital library structure and functionalities with the meaning of classification, browsing and information retrieval in DL. In the following section we will describe the 6th S in the 6S formal model. Figure 2: Digital library in 5S Framework1- Streams are sequences of arbitrary types (e.g., bits, characters, pixels, frames) and may be static or dynamic (such as audio and video). Streams describe properties of DL content such as encoding and language for textual material or particular forms of multimedia data.2- Structure specifies the way in which parts of a whole are arranged or organized. In DLs, structures can represent hypertexts, taxonomies, system connections, user relationships, and containment– to cite a few.3- Space is a set of objects together with operations on those objects that obey certain constraints. Spaces define logical and presentational views of several DL components, and can be of type measurable, measure, probability, topological, metric, or vector space.Figure 3: Digital library in 6S Framework6-Semantic: is the semantic web layer in The 6S proposed model for digital library in which we use ontology to define the concepts of digital library and the relationship between them to 2
enhance the classification, browsing and information retrieval in digital library.In figure 3 Semantic web technologies represents important layer where 5S layers depends on ontology to gain meaningful data from digital library while searching, browsing and indexing. Ontology must be updated automatically with every update in the digital library contents. In the following section we will discuss ontology based navigation and classification according to the 5S model definitions and how can we keep ontology up to date using hierarchal Algorithm.Table 1: 6S Model examples and objectivesspace. Transformers = {tfr1, tfr2,...,tfrn} is a set of such functions.Definition4. Let {doi} = {doi1, doi2,..., doin } be a set of digital objects and Ct = {c1,c2,...,cm} be a set of labels for categories. A classifier classCt:{doi}  2Ct is a function that maps a digital object to a set of categories.Definition5. A cluster cluk = {do1k, do2k, ..., donk} is a subset of a set of digital objects [8].Table 2: Services of DL     Service        User input      Other service Input     Output     Classifying    {doi}  classCt , Ct     {(doi, {ck_i})}     Clustering       {doi}    none      {cluk_i}     Searching     q, Ci     IC_i      {dok}       4.1 Ontology-Based navigation and ClassificationOntologies specify relevant concepts, the types of things and their properties and the semantic relationships that exist between those concepts in a particular domain. Formal specifications use a language with a mathematically well-defined syntax and semantics to describe such concepts, properties, and relationships [8].Definition1. Field fi is a label associated with a node of a structural or descriptive metadata specification.Definition2. A query q is the representation of user interest or information need. The exact format of a query is left unspecified here since it is system- dependent.Definition3. tfr  S3  Spaces is a function that transforms any element of a concept in S3 into aWe can represent the Semantic in 6S digital library model as the procedure of applying semantic web technologies in digital library by defining and building ontology for digital library concepts and classifying data points according to these concepts.5. Ontology ImplementationHere the Subject ontology in Figure 4 created in digital library is arranged in a tree hierarchy, at each level of the tree there are classes represent subjects of data points, to classify data point as a member of existing class we will start with the root node. Every data point belongs to the root.Figure 4: Subject ontology 3
5.1 Example of Ontology ConstraintsExamples of class constraints are suggested by ontology as shown in figure 5 are as follows:(1) The “Subclass-Super class” constraint: if a data point is member of “Database”, then it should also be member of “Computer”.(2) The “Mutual Exclusion” constraint states that: if a data point belongs to “Computer” class, then it should not belong to “Physics” classP(Cj | d) = P(Cj)P(d | Cj) (1) P(d)To combine multiple pieces of evidence it is that, if two different key words w1 and w2 the probability calculation will start with the following equation [10]:P(C1|W1˄W2) =P(C1) P(W1˄W2|C1) (2) P (W1˄W2)When two features are conditionally independent, we can calculate their co-occurrence as a simple multiplication [11]P(C |W ˄W ) = P(W1|C1)P(W2|C1) P(C1)1 1 2 P(W1˄W2) (3)Russell and Norvig explain that, we can eliminate the term P(W1˄W2) with normalization, which uses the conditional probabilities and the assumption of conditional independence to calculate this term[11].   Science     ComputerPhysics    DatabaseArtificial Intelligence   constraintSubset constraint   mutual exclusiveFigure 5: Constraints Model5.2 Algorithm used for updating OntologyThe ontology in figure 4 can be updated using the hierarchical algorithm, which provides the ability to classify any data point to existing class or create new class and update the constraints according to the new added class.We used the naïve bayes classifier formula to determine the probability distribution of data point over all classes, Naive bayes is able to compare not only single words, as in most current approaches, but substrings of an arbitrary length.5.2.1 Naïve BayesNaïve Bayes classifier is useful in our case study of the tree classifier. We begin with a set of training examples with each example document assigned to one of a fixed set of possible classes, C = {C1, C2, C3,... CJ}. Naïve Bayes classifier uses this training data to generate a probabilistic model of each class; and then, given a new document to classify, it uses the class models and Bayes’ rule to estimate the likelihood with which each class generated the new document. The document is then assigned to the most likely classes [10].Hence, given a document d= {d1, d2, d3,...,dL}, we use Bayes theorem to estimate the probability of a class Cj:P(C1|W1˄W2) = P(W1˄W2|C1) P(C1) P (W1˄W2)(4) P(C2|W1˄W2) = P(W1˄W2|C2) P(C2) (5)  4P (W1˄W2)The two equations sum to 1, since the word W1 is certainly either related to C1 or C2 and then multiplies the whole equation by the common denominator and the resultant equation isP(C1|W1˄W2) =(6)P(W1|C1) P(W2|C1) P(C1)P(W1|C1) P(W2|C1) P(C1)+P(W1|C2)P(W2|C2) P(C2) 5.2.2 Hierarchical algorithmBased on the ontology in figure 4, given a non-classified data point d and a set of classified data points D associated to classes C, each class has set of constraints consi, It is required to classify d in certain class whether by adding class or creating new class with its constrains consi+n .Function Update_Ont_Algorithm (D.,C, d, Consi):Cd, Consi+m,Input:D: set of labeled data points, C: set of classes,D: unclassified data point,
Consi: set of constraints;Output:Cd: class label of d,Consi+m: constraints on new class;Pnew : probability of creating a new class h = Number of levels of ontologyfor J=1 to h dofor K=1 to |Cj| do( |Cj| is the number of classes in one level J ) Using Naive Bayes classifiers Find P(Cjk|d)end functionP(Cjk|d) =P(W1|Cjk) P(W2|Cjk)P(Wn|Cjk) P(Cjk)P(W1|Cjk)P(W2|Cjk)P(Wn|Cjk)P(Cjk) + P(W1|Cj(k+1)) P(W2|Cj(k+1))P(Wn|Cj(k+1))P(Cj(k+1))Function Update_Cons (C, D,Consold):Consnew Input:D: Datapoints;C: Class assignments all datapoints in D; Consold: Old constraints on the existing setof classes.Output:Consnew: Updated set of class constraints,Consnew = Consold + CdNewCons;Each new class created is added to a single parent at the time of creation.Add each parent, child relationship as a constraint in Consnew.end function6. CASE STUDYWe created Subject Ontology of 5 levels (figure 4) hierarchy classes and super classes to associate subject of documents to concept in ontology. In this way user can view subjects organized in a classification scheme and can browse over this scheme to retrieve documents. This digital library is an open source Java project which is helping user to organize and retrieve documents in PDF format. It is software of Personal Information Management (PIM) that works with technologies of Semantic Web [12]. User can insert/edit information on documents like author, title, description, subject and so on. This information is stored as RDF (Resource Description Framework) and use standard properties like those defined in Dublin Core metadata set [12].6.1 Digital library Stored DataThese are samples of data stored in digital library beside the other metadata of books.Table3. Digital library Sample data P(Cj(k+1)|d) =P(W1|Cj(k+1)) P(W2|Cj(k+1))P(Wn|Cj(k+1)) P(Cj(k+1)) P(W1|Cjk)P(W2|Cjk)P(Wn|Cjk)P(Cjk) +P(W1|Cj(k+1)) P(W2|Cj(k+1))P(Wn|Cj(k+1))P(Cj(k+1))Cd = DataPointClassify(P(Cjk|d),P(Cj(k+1)|d), h)Consi = Update_Cons({d∪D},{Cd∪C},Consi) end forConsi+m= Consiend forend functionfunction DataPointClassify (P1,P2, h):Cd Input:P1=P(Cjk|d): probability of first class given a datapoint d,P2=P(Cj(k+1)|d): probability of second class given a datapoint dh: heigth of ontologyOutput:Cd : classification of d to certain classfor L = 2 to h doif d has seed label at level L thenclass(d, levelL) = seed label;elseClassofdatapoint = children(label(d, levell-1)) if Classofdatapoint is not empty thenif (maxProb(P1,P2) / minProb(P1,P2) ) < 2 then Assign d to CdnewSet parent(Cdnew) = root class at level L-1ElseCd=Class(maxProb(P1,P2))Assign d to maxProb(P1,P2)end if end ifend if end for  5
The digital Library contains 200 PDF books with subject Database, 55 books related to access subclass of database, 65 books related to Informix subclass and 80 books of oracle subject.In our case study we will compare between different methods of searching1- Key word search without using semantic: Digital library can detect the subject of some PDF books from their metadata by using a powerful full-text search library written in Java. This results in low Recall=5% and low precision=25%2- Searching using not updated ontology: Searching for certain books with subject is not exist in ontology will result in value zero of precision and recall because books are not classified according to any class or super class in hierarchical ontology3- Searching after updating ontology:We need to retrieve book of certain subject and this subject is not exist in ontology so we will try to classify books to certain class in ontology or create new class according to book subject. In the following section we will apply algorithm to update ontology.6.2 Applying Hierarchical AlgorithmStarting from level 4 in subject ontology figure 4 assuming that Book7 from table3 is related to database super-class, we need to classify this unlabeled data point to one of the children which are (access and Informix) or creating new class in ontology for it.Book7: Oracle Automatic Storage Management Administrator’s Guide P(ACC)=46%P(INF)=54%Table 4: Probability distribution over classesN1: number of books where the word exists in first class (access)N2: number of books where the word exists in second class (Informix).W/Access: number of access books where the word exists divided by the number of all books in accessW/Informix: number of Informix books where the word exists divided by the number of all Informix books.7: Find P(Ci|X) for all classes (Access and Informix)P(Access|Xu)= 0.6P(Informix|Xu)=0.4From the function of Consistent Assignment and since the Pcand of each class is nearly uniform then Create a new class Cnew=”Oracle” at level L and assign the Xu to this new classSet parent(Cnew)=class choice at level L-1 (Database)From the function of update constraints we update the constraints of the newly created class “oracle” as following:1- Oracle is subclass of Database class (subset- constraints) and 2- Oracle class members cann’t be member of any other class on the same level (mutually exclusive constraints)Book Subjects ScienceComputer DBAIChemistry physicsArtPhotography(level 1) (level 2)(level 3) (level 4) (level 5)    Informix Access Oracle   Word        N1      N2    W/Acc         W/Inf     Oracle       20     25   0.36        0.39      Automatic  18 300.33   0.46     Storage    15   14 0.27       0.22     Management    27   20 0.49       0.3     Administrators       20     18   0.36        0.28      Guide   30     35    0.55       0.54      6LiteratureFigure 6. Updated ontology with new class AddedSearching After updating ontology shows enhancements in the values of precision and recall. From 80 books we retrieved 62 books relevant to subject and 10 irrelevant to it.Precision= (62/62+10)*100 = 86.7% Recall= (62/62+18)*100= 77.5%
Updating ontology shows much better results of high precision and recall values than of keyword search and searching with incomplete ontology.7. Conclusion and Future WorkSemantic Web technologies are valuable add‐ons for digital libraries. In this paper we proved that using ontology which is one of the semantic web technologies in digital library structure to define concepts and relationship between entities; it organize and gives meaningful metadata about digital library content and finally it improves information retrieval and books classifications in digital library. Key word searching was not effective with low precision and recall values. Searching in digital library using updated ontology results in the best values of precision and recall. The proposed Hierarchy algorithm is using the books keywords and using naïve bayes classifier to automatically classify books into the created subject ontology whether by creating new class or assign it to any existing class. Digital Library Structure should be modified to include the semantic web layer and this leads us to build new digital library model 6S as extension of the 5S model to use the semantic web technologies in digital libraries.Future work will consist of evaluating the implementation and approach more carefully, validating the 6S digital library model with a number of quality aware case studies and using large digital library resources and different types of resources not only PDF files contents. Also future work should consist of measuring different semantic techniques with digital library to increase the quality of digital libraries.REFERENCES[1] H. Suleman, Open digital libraries, in, Citeseer, 2002.[2] M. Trivedi, Digital libraries: functionality, usability, and accessibility, Library Philosophy and Practice (e-journal), (2010) 381.[3] H.-S. Hwang, K.-S. Park, C.-S. Kim, Ontology-based information search in the real world using web services, in: Computational Science and Its Applications-ICCSA 2006, Springer, 2006, pp. 125-133.[4] J.M. Gómez-Berbís, R. Colomo-Palacios, Á. García-Crespo, CallimachusDL: using semantics to enhance search and retrieval in a digital library, in: Emerging Technologies and Information Systems for the Knowledge Society, Springer, 2008, pp. 540-548.[5] T. Berners-Lee, J. Hendler, O. Lassila, The semantic web, Scientific american, 284 (2001) 28- 37.[6] M.A. Gonçalves, E.A. Fox, L.T. Watson, N.A. Kipp, Streams, structures, spaces, scenarios, societies (5s): A formal model for digital libraries, ACM Transactions on Information Systems (TOIS), 22 (2004) 270-312.[7] U. Murthy, D. Gorton, R. Torres, M. Gonçalves, E. Fox, L. Delcambre, Extending the 5S digital library (DL) framework: From a minimal dl towards a dl reference model, in: Proceedings of the 1st Workshop on Digital Library Foundations, ACM IEEE Joint Conference on Digital Libraries, 2007, pp. 25-30.[8] M.A. Gonçalves, E.A. Fox, L.T. Watson, Towards a digital library theory: a formal digital library ontology, International Journal on Digital Libraries, 8 (2008) 91-114[9] B. Dalvi, W.W. Cohen, J. Callan, Classifying entities into an incomplete ontology, in: Proceedings of the 2013 workshop on Automated knowledge base construction, ACM, 2013, pp. 31- 36[10] R.M. Pampapathi, B. Mirkin, M. Levene, A suffix tree approach to email filtering, arXiv preprint cs/0503030, (2005).[11] S. Sinclair, Adapting Bayesian statistical spam filters to the server side, Journal of Computing Sciences in Colleges, 19 (2004) 344- 346.[12]Digital library Example URL: http://spdl.sourceforge.net/index.htm7